$date
	Tue Nov 14 14:03:45 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbench $end
$var wire 32 ! out [31:0] $end
$var reg 1 " clock $end
$var reg 11 # raddr [10:0] $end
$var reg 11 $ waddr [10:0] $end
$var reg 32 % wdata [31:0] $end
$var reg 1 & wren $end
$scope module dut $end
$var wire 1 " clock $end
$var wire 11 ' raddr [10:0] $end
$var wire 11 ( waddr [10:0] $end
$var wire 32 ) wdata [31:0] $end
$var wire 1 & wren $end
$var wire 8 * out3 [7:0] $end
$var wire 8 + out2 [7:0] $end
$var wire 8 , out1 [7:0] $end
$var wire 8 - out0 [7:0] $end
$var reg 32 . out [31:0] $end
$var reg 9 / raddr0 [8:0] $end
$var reg 9 0 raddr1 [8:0] $end
$var reg 9 1 raddr2 [8:0] $end
$var reg 9 2 raddr3 [8:0] $end
$var reg 9 3 waddr0 [8:0] $end
$var reg 9 4 waddr1 [8:0] $end
$var reg 9 5 waddr2 [8:0] $end
$var reg 9 6 waddr3 [8:0] $end
$var reg 8 7 wdata0 [7:0] $end
$var reg 8 8 wdata1 [7:0] $end
$var reg 8 9 wdata2 [7:0] $end
$var reg 8 : wdata3 [7:0] $end
$scope module ram0 $end
$var wire 1 " clock $end
$var wire 9 ; raddr [8:0] $end
$var wire 9 < waddr [8:0] $end
$var wire 8 = wdata [7:0] $end
$var wire 1 & wren $end
$var reg 8 > out [7:0] $end
$upscope $end
$scope module ram1 $end
$var wire 1 " clock $end
$var wire 9 ? raddr [8:0] $end
$var wire 9 @ waddr [8:0] $end
$var wire 8 A wdata [7:0] $end
$var wire 1 & wren $end
$var reg 8 B out [7:0] $end
$upscope $end
$scope module ram2 $end
$var wire 1 " clock $end
$var wire 9 C raddr [8:0] $end
$var wire 9 D waddr [8:0] $end
$var wire 8 E wdata [7:0] $end
$var wire 1 & wren $end
$var reg 8 F out [7:0] $end
$upscope $end
$scope module ram3 $end
$var wire 1 " clock $end
$var wire 9 G raddr [8:0] $end
$var wire 9 H waddr [8:0] $end
$var wire 8 I wdata [7:0] $end
$var wire 1 & wren $end
$var reg 8 J out [7:0] $end
$upscope $end
$upscope $end
$scope begin $unm_blk_33 $end
$var integer 32 K i [31:0] $end
$upscope $end
$scope task do_mem $end
$var reg 11 L _raddr [10:0] $end
$var reg 11 M _waddr [10:0] $end
$var reg 32 N _wdata [31:0] $end
$var reg 1 O _wren $end
$upscope $end
$scope task test_mem $end
$scope begin $ivl_for_loop0 $end
$var integer 32 P j [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 Q i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 Q
b0 P
1O
b10010001101000101011001111000 N
b0 M
b0 L
b0 K
bx J
b10010 I
b0 H
b0 G
bx F
b110100 E
b0 D
b0 C
bx B
b1010110 A
b0 @
b0 ?
bx >
b1111000 =
b0 <
b0 ;
b10010 :
b110100 9
b1010110 8
b1111000 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
bx .
bx -
bx ,
bx +
bx *
b10010001101000101011001111000 )
b0 (
b0 '
1&
b10010001101000101011001111000 %
b0 $
b0 #
0"
bx !
$end
#50
b10010001101000101011001111000 !
b10010001101000101011001111000 .
b1111000 -
b1111000 >
b1010110 ,
b1010110 B
b110100 +
b110100 F
b10010 *
b10010 J
1"
#100
b10010 7
b10010 =
b110100 :
b110100 I
b1010110 9
b1010110 E
b1111000 8
b1111000 A
b100 6
b100 H
b100 5
b100 D
b100 4
b100 @
b101 3
b101 <
0"
b10001 $
b10001 (
b10001 M
b1 K
#150
1"
#200
b10010 8
b10010 A
b110100 7
b110100 =
b1010110 :
b1010110 I
b1111000 9
b1111000 E
b1000 6
b1000 H
b1000 5
b1000 D
b1001 4
b1001 @
b1001 3
b1001 <
0"
b100010 $
b100010 (
b100010 M
b10 K
#250
1"
#300
b10010 9
b10010 E
b110100 8
b110100 A
b1010110 7
b1010110 =
b1111000 :
b1111000 I
b1100 6
b1100 H
b1101 5
b1101 D
b1101 4
b1101 @
b1101 3
b1101 <
0"
b110011 $
b110011 (
b110011 M
b11 K
#350
1"
#400
b10010 :
b10010 I
b110100 9
b110100 E
b1010110 8
b1010110 A
b1111000 7
b1111000 =
b10001 6
b10001 H
b10001 5
b10001 D
b10001 4
b10001 @
b10001 3
b10001 <
0"
b1000100 $
b1000100 (
b1000100 M
b100 K
#450
1"
#500
b10010 7
b10010 =
b110100 :
b110100 I
b1010110 9
b1010110 E
b1111000 8
b1111000 A
b10101 6
b10101 H
b10101 5
b10101 D
b10101 4
b10101 @
b10110 3
b10110 <
0"
b1010101 $
b1010101 (
b1010101 M
b101 K
#550
1"
#600
b10010 8
b10010 A
b110100 7
b110100 =
b1010110 :
b1010110 I
b1111000 9
b1111000 E
b11001 6
b11001 H
b11001 5
b11001 D
b11010 4
b11010 @
b11010 3
b11010 <
0"
b1100110 $
b1100110 (
b1100110 M
b110 K
#650
1"
#700
b10010 9
b10010 E
b110100 8
b110100 A
b1010110 7
b1010110 =
b1111000 :
b1111000 I
b11101 6
b11101 H
b11110 5
b11110 D
b11110 4
b11110 @
b11110 3
b11110 <
0"
b1110111 $
b1110111 (
b1110111 M
b111 K
#750
1"
#800
b10010 :
b10010 I
b110100 9
b110100 E
b1010110 8
b1010110 A
b1111000 7
b1111000 =
b100010 6
b100010 H
b100010 5
b100010 D
b100010 4
b100010 @
b100010 3
b100010 <
0"
b10001000 $
b10001000 (
b10001000 M
b1000 K
#850
1"
#900
b10010 7
b10010 =
b110100 :
b110100 I
b1010110 9
b1010110 E
b1111000 8
b1111000 A
b100110 6
b100110 H
b100110 5
b100110 D
b100110 4
b100110 @
b100111 3
b100111 <
0"
b10011001 $
b10011001 (
b10011001 M
b1001 K
#950
1"
#1000
b10010 8
b10010 A
b110100 7
b110100 =
b1010110 :
b1010110 I
b1111000 9
b1111000 E
b101010 6
b101010 H
b101010 5
b101010 D
b101011 4
b101011 @
b101011 3
b101011 <
0"
b10101010 $
b10101010 (
b10101010 M
b1010 K
#1050
1"
#1100
b10010 9
b10010 E
b110100 8
b110100 A
b1010110 7
b1010110 =
b1111000 :
b1111000 I
b101110 6
b101110 H
b101111 5
b101111 D
b101111 4
b101111 @
b101111 3
b101111 <
0"
b10111011 $
b10111011 (
b10111011 M
b1011 K
#1150
1"
#1200
b10010 :
b10010 I
b110100 9
b110100 E
b1010110 8
b1010110 A
b1111000 7
b1111000 =
b110011 6
b110011 H
b110011 5
b110011 D
b110011 4
b110011 @
b110011 3
b110011 <
0"
b11001100 $
b11001100 (
b11001100 M
b1100 K
#1250
1"
#1300
b10010 7
b10010 =
b110100 :
b110100 I
b1010110 9
b1010110 E
b1111000 8
b1111000 A
b110111 6
b110111 H
b110111 5
b110111 D
b110111 4
b110111 @
b111000 3
b111000 <
0"
b11011101 $
b11011101 (
b11011101 M
b1101 K
#1350
1"
#1400
b10010 8
b10010 A
b110100 7
b110100 =
b1010110 :
b1010110 I
b1111000 9
b1111000 E
b111011 6
b111011 H
b111011 5
b111011 D
b111100 4
b111100 @
b111100 3
b111100 <
0"
b11101110 $
b11101110 (
b11101110 M
b1110 K
#1450
1"
#1500
b10010 9
b10010 E
b110100 8
b110100 A
b1010110 7
b1010110 =
b1111000 :
b1111000 I
b111111 6
b111111 H
b1000000 5
b1000000 D
b1000000 4
b1000000 @
b1000000 3
b1000000 <
0"
b11111111 $
b11111111 (
b11111111 M
b1111 K
#1550
1"
#1600
b0 :
b0 I
b0 9
b0 E
b0 8
b0 A
b0 7
b0 =
b0 6
b0 H
b0 5
b0 D
b0 4
b0 @
b0 3
b0 <
0"
0&
b0 %
b0 )
b0 $
b0 (
0O
b0 N
b0 M
b10000 K
#1650
1"
#1700
b1 2
b1 G
b1 1
b1 C
b1 0
b1 ?
b1 /
b1 ;
0"
b100 #
b100 '
b100 L
b1 Q
#1750
bx !
bx .
bx *
bx J
bx +
bx F
bx ,
bx B
bx -
bx >
1"
#1800
b10 2
b10 G
b10 1
b10 C
b10 0
b10 ?
b10 /
b10 ;
0"
b1000 #
b1000 '
b1000 L
b10 Q
#1850
1"
#1900
b11 2
b11 G
b11 1
b11 C
b11 0
b11 ?
b11 /
b11 ;
0"
b1100 #
b1100 '
b1100 L
b11 Q
#1950
1"
#2000
b100 2
b100 G
b100 1
b100 C
b100 0
b100 ?
b100 /
b100 ;
0"
b10000 #
b10000 '
b10000 L
b1 P
b0 Q
#2050
b1101000101011001111000xxxxxxxx !
b1101000101011001111000xxxxxxxx .
b1111000 ,
b1111000 B
b1010110 +
b1010110 F
b110100 *
b110100 J
1"
#2100
b101 2
b101 G
b101 1
b101 C
b101 0
b101 ?
b101 /
b101 ;
0"
b10100 #
b10100 '
b10100 L
b1 Q
#2150
bx00010010 !
bx00010010 .
bx *
bx J
bx +
bx F
bx ,
bx B
b10010 -
b10010 >
1"
#2200
b110 2
b110 G
b110 1
b110 C
b110 0
b110 ?
b110 /
b110 ;
0"
b11000 #
b11000 '
b11000 L
b10 Q
#2250
bx !
bx .
bx -
bx >
1"
#2300
b111 2
b111 G
b111 1
b111 C
b111 0
b111 ?
b111 /
b111 ;
0"
b11100 #
b11100 '
b11100 L
b11 Q
#2350
1"
#2400
b1000 2
b1000 G
b1000 1
b1000 C
b1000 0
b1000 ?
b1000 /
b1000 ;
0"
b100000 #
b100000 '
b100000 L
b10 P
b0 Q
#2450
b101011001111000xxxxxxxxxxxxxxxx !
b101011001111000xxxxxxxxxxxxxxxx .
b1111000 +
b1111000 F
b1010110 *
b1010110 J
1"
#2500
b1001 2
b1001 G
b1001 1
b1001 C
b1001 0
b1001 ?
b1001 /
b1001 ;
0"
b100100 #
b100100 '
b100100 L
b1 Q
#2550
bx0001001000110100 !
bx0001001000110100 .
bx *
bx J
bx +
bx F
b10010 ,
b10010 B
b110100 -
b110100 >
1"
#2600
b1010 2
b1010 G
b1010 1
b1010 C
b1010 0
b1010 ?
b1010 /
b1010 ;
0"
b101000 #
b101000 '
b101000 L
b10 Q
#2650
bx !
bx .
bx -
bx >
bx ,
bx B
1"
#2700
b1011 2
b1011 G
b1011 1
b1011 C
b1011 0
b1011 ?
b1011 /
b1011 ;
0"
b101100 #
b101100 '
b101100 L
b11 Q
#2750
1"
#2800
b1100 2
b1100 G
b1100 1
b1100 C
b1100 0
b1100 ?
b1100 /
b1100 ;
0"
b110000 #
b110000 '
b110000 L
b11 P
b0 Q
#2850
b1111000xxxxxxxxxxxxxxxxxxxxxxxx !
b1111000xxxxxxxxxxxxxxxxxxxxxxxx .
b1111000 *
b1111000 J
1"
#2900
b1101 2
b1101 G
b1101 1
b1101 C
b1101 0
b1101 ?
b1101 /
b1101 ;
0"
b110100 #
b110100 '
b110100 L
b1 Q
#2950
bx000100100011010001010110 !
bx000100100011010001010110 .
bx *
bx J
b10010 +
b10010 F
b110100 ,
b110100 B
b1010110 -
b1010110 >
1"
#3000
b1110 2
b1110 G
b1110 1
b1110 C
b1110 0
b1110 ?
b1110 /
b1110 ;
0"
b111000 #
b111000 '
b111000 L
b10 Q
#3050
bx !
bx .
bx -
bx >
bx ,
bx B
bx +
bx F
1"
#3100
b1111 2
b1111 G
b1111 1
b1111 C
b1111 0
b1111 ?
b1111 /
b1111 ;
0"
b111100 #
b111100 '
b111100 L
b11 Q
#3150
1"
#3200
b10000 2
b10000 G
b10000 1
b10000 C
b10000 0
b10000 ?
b10000 /
b10000 ;
0"
b1000000 #
b1000000 '
b1000000 L
b100 P
b0 Q
#3250
1"
#3300
b10001 2
b10001 G
b10001 1
b10001 C
b10001 0
b10001 ?
b10001 /
b10001 ;
0"
b1000100 #
b1000100 '
b1000100 L
b1 Q
#3350
b10010001101000101011001111000 !
b10010001101000101011001111000 .
b10010 *
b10010 J
b110100 +
b110100 F
b1010110 ,
b1010110 B
b1111000 -
b1111000 >
1"
#3400
b10010 2
b10010 G
b10010 1
b10010 C
b10010 0
b10010 ?
b10010 /
b10010 ;
0"
b1001000 #
b1001000 '
b1001000 L
b10 Q
#3450
bx !
bx .
bx -
bx >
bx ,
bx B
bx +
bx F
bx *
bx J
1"
#3500
b10011 2
b10011 G
b10011 1
b10011 C
b10011 0
b10011 ?
b10011 /
b10011 ;
0"
b1001100 #
b1001100 '
b1001100 L
b11 Q
#3550
1"
#3600
b10100 2
b10100 G
b10100 1
b10100 C
b10100 0
b10100 ?
b10100 /
b10100 ;
0"
b1010000 #
b1010000 '
b1010000 L
b101 P
b0 Q
#3650
1"
#3700
b10101 2
b10101 G
b10101 1
b10101 C
b10101 0
b10101 ?
b10101 /
b10101 ;
0"
b1010100 #
b1010100 '
b1010100 L
b1 Q
#3750
b1101000101011001111000xxxxxxxx !
b1101000101011001111000xxxxxxxx .
b110100 *
b110100 J
b1010110 +
b1010110 F
b1111000 ,
b1111000 B
1"
#3800
b10110 2
b10110 G
b10110 1
b10110 C
b10110 0
b10110 ?
b10110 /
b10110 ;
0"
b1011000 #
b1011000 '
b1011000 L
b10 Q
#3850
bx00010010 !
bx00010010 .
b10010 -
b10010 >
bx ,
bx B
bx +
bx F
bx *
bx J
1"
#3900
b10111 2
b10111 G
b10111 1
b10111 C
b10111 0
b10111 ?
b10111 /
b10111 ;
0"
b1011100 #
b1011100 '
b1011100 L
b11 Q
#3950
bx !
bx .
bx -
bx >
1"
#4000
b11000 2
b11000 G
b11000 1
b11000 C
b11000 0
b11000 ?
b11000 /
b11000 ;
0"
b1100000 #
b1100000 '
b1100000 L
b110 P
b0 Q
#4050
1"
#4100
b11001 2
b11001 G
b11001 1
b11001 C
b11001 0
b11001 ?
b11001 /
b11001 ;
0"
b1100100 #
b1100100 '
b1100100 L
b1 Q
#4150
b101011001111000xxxxxxxxxxxxxxxx !
b101011001111000xxxxxxxxxxxxxxxx .
b1010110 *
b1010110 J
b1111000 +
b1111000 F
1"
#4200
b11010 2
b11010 G
b11010 1
b11010 C
b11010 0
b11010 ?
b11010 /
b11010 ;
0"
b1101000 #
b1101000 '
b1101000 L
b10 Q
#4250
bx0001001000110100 !
bx0001001000110100 .
b110100 -
b110100 >
b10010 ,
b10010 B
bx +
bx F
bx *
bx J
1"
#4300
b11011 2
b11011 G
b11011 1
b11011 C
b11011 0
b11011 ?
b11011 /
b11011 ;
0"
b1101100 #
b1101100 '
b1101100 L
b11 Q
#4350
bx !
bx .
bx ,
bx B
bx -
bx >
1"
#4400
b11100 2
b11100 G
b11100 1
b11100 C
b11100 0
b11100 ?
b11100 /
b11100 ;
0"
b1110000 #
b1110000 '
b1110000 L
b111 P
b0 Q
#4450
1"
#4500
b11101 2
b11101 G
b11101 1
b11101 C
b11101 0
b11101 ?
b11101 /
b11101 ;
0"
b1110100 #
b1110100 '
b1110100 L
b1 Q
#4550
b1111000xxxxxxxxxxxxxxxxxxxxxxxx !
b1111000xxxxxxxxxxxxxxxxxxxxxxxx .
b1111000 *
b1111000 J
1"
#4600
b11110 2
b11110 G
b11110 1
b11110 C
b11110 0
b11110 ?
b11110 /
b11110 ;
0"
b1111000 #
b1111000 '
b1111000 L
b10 Q
#4650
bx000100100011010001010110 !
bx000100100011010001010110 .
b1010110 -
b1010110 >
b110100 ,
b110100 B
b10010 +
b10010 F
bx *
bx J
1"
#4700
b11111 2
b11111 G
b11111 1
b11111 C
b11111 0
b11111 ?
b11111 /
b11111 ;
0"
b1111100 #
b1111100 '
b1111100 L
b11 Q
#4750
bx !
bx .
bx +
bx F
bx ,
bx B
bx -
bx >
1"
#4800
b100000 2
b100000 G
b100000 1
b100000 C
b100000 0
b100000 ?
b100000 /
b100000 ;
0"
b10000000 #
b10000000 '
b10000000 L
b1000 P
b0 Q
#4850
1"
#4900
b100001 2
b100001 G
b100001 1
b100001 C
b100001 0
b100001 ?
b100001 /
b100001 ;
0"
b10000100 #
b10000100 '
b10000100 L
b1 Q
#4950
1"
#5000
b100010 2
b100010 G
b100010 1
b100010 C
b100010 0
b100010 ?
b100010 /
b100010 ;
0"
b10001000 #
b10001000 '
b10001000 L
b10 Q
#5050
b10010001101000101011001111000 !
b10010001101000101011001111000 .
b1111000 -
b1111000 >
b1010110 ,
b1010110 B
b110100 +
b110100 F
b10010 *
b10010 J
1"
#5100
b100011 2
b100011 G
b100011 1
b100011 C
b100011 0
b100011 ?
b100011 /
b100011 ;
0"
b10001100 #
b10001100 '
b10001100 L
b11 Q
#5150
bx !
bx .
bx *
bx J
bx +
bx F
bx ,
bx B
bx -
bx >
1"
#5200
b100100 2
b100100 G
b100100 1
b100100 C
b100100 0
b100100 ?
b100100 /
b100100 ;
0"
b10010000 #
b10010000 '
b10010000 L
b1001 P
b0 Q
#5250
1"
#5300
b100101 2
b100101 G
b100101 1
b100101 C
b100101 0
b100101 ?
b100101 /
b100101 ;
0"
b10010100 #
b10010100 '
b10010100 L
b1 Q
#5350
1"
#5400
b100110 2
b100110 G
b100110 1
b100110 C
b100110 0
b100110 ?
b100110 /
b100110 ;
0"
b10011000 #
b10011000 '
b10011000 L
b10 Q
#5450
b1101000101011001111000xxxxxxxx !
b1101000101011001111000xxxxxxxx .
b1111000 ,
b1111000 B
b1010110 +
b1010110 F
b110100 *
b110100 J
1"
#5500
b100111 2
b100111 G
b100111 1
b100111 C
b100111 0
b100111 ?
b100111 /
b100111 ;
0"
b10011100 #
b10011100 '
b10011100 L
b11 Q
#5550
bx00010010 !
bx00010010 .
bx *
bx J
bx +
bx F
bx ,
bx B
b10010 -
b10010 >
1"
#5600
b101000 2
b101000 G
b101000 1
b101000 C
b101000 0
b101000 ?
b101000 /
b101000 ;
0"
b10100000 #
b10100000 '
b10100000 L
b1010 P
b0 Q
#5650
bx !
bx .
bx -
bx >
1"
#5700
b101001 2
b101001 G
b101001 1
b101001 C
b101001 0
b101001 ?
b101001 /
b101001 ;
0"
b10100100 #
b10100100 '
b10100100 L
b1 Q
#5750
1"
#5800
b101010 2
b101010 G
b101010 1
b101010 C
b101010 0
b101010 ?
b101010 /
b101010 ;
0"
b10101000 #
b10101000 '
b10101000 L
b10 Q
#5850
b101011001111000xxxxxxxxxxxxxxxx !
b101011001111000xxxxxxxxxxxxxxxx .
b1111000 +
b1111000 F
b1010110 *
b1010110 J
1"
#5900
b101011 2
b101011 G
b101011 1
b101011 C
b101011 0
b101011 ?
b101011 /
b101011 ;
0"
b10101100 #
b10101100 '
b10101100 L
b11 Q
#5950
bx0001001000110100 !
bx0001001000110100 .
bx *
bx J
bx +
bx F
b10010 ,
b10010 B
b110100 -
b110100 >
1"
#6000
b101100 2
b101100 G
b101100 1
b101100 C
b101100 0
b101100 ?
b101100 /
b101100 ;
0"
b10110000 #
b10110000 '
b10110000 L
b1011 P
b0 Q
#6050
bx !
bx .
bx -
bx >
bx ,
bx B
1"
#6100
b101101 2
b101101 G
b101101 1
b101101 C
b101101 0
b101101 ?
b101101 /
b101101 ;
0"
b10110100 #
b10110100 '
b10110100 L
b1 Q
#6150
1"
#6200
b101110 2
b101110 G
b101110 1
b101110 C
b101110 0
b101110 ?
b101110 /
b101110 ;
0"
b10111000 #
b10111000 '
b10111000 L
b10 Q
#6250
b1111000xxxxxxxxxxxxxxxxxxxxxxxx !
b1111000xxxxxxxxxxxxxxxxxxxxxxxx .
b1111000 *
b1111000 J
1"
#6300
b101111 2
b101111 G
b101111 1
b101111 C
b101111 0
b101111 ?
b101111 /
b101111 ;
0"
b10111100 #
b10111100 '
b10111100 L
b11 Q
#6350
bx000100100011010001010110 !
bx000100100011010001010110 .
bx *
bx J
b10010 +
b10010 F
b110100 ,
b110100 B
b1010110 -
b1010110 >
1"
#6400
b110000 2
b110000 G
b110000 1
b110000 C
b110000 0
b110000 ?
b110000 /
b110000 ;
0"
b11000000 #
b11000000 '
b11000000 L
b1100 P
b0 Q
#6450
bx !
bx .
bx -
bx >
bx ,
bx B
bx +
bx F
1"
#6500
b110001 2
b110001 G
b110001 1
b110001 C
b110001 0
b110001 ?
b110001 /
b110001 ;
0"
b11000100 #
b11000100 '
b11000100 L
b1 Q
#6550
1"
#6600
b110010 2
b110010 G
b110010 1
b110010 C
b110010 0
b110010 ?
b110010 /
b110010 ;
0"
b11001000 #
b11001000 '
b11001000 L
b10 Q
#6650
1"
#6700
b110011 2
b110011 G
b110011 1
b110011 C
b110011 0
b110011 ?
b110011 /
b110011 ;
0"
b11001100 #
b11001100 '
b11001100 L
b11 Q
#6750
b10010001101000101011001111000 !
b10010001101000101011001111000 .
b10010 *
b10010 J
b110100 +
b110100 F
b1010110 ,
b1010110 B
b1111000 -
b1111000 >
1"
#6800
b110100 2
b110100 G
b110100 1
b110100 C
b110100 0
b110100 ?
b110100 /
b110100 ;
0"
b11010000 #
b11010000 '
b11010000 L
b1101 P
b0 Q
#6850
bx !
bx .
bx -
bx >
bx ,
bx B
bx +
bx F
bx *
bx J
1"
#6900
b110101 2
b110101 G
b110101 1
b110101 C
b110101 0
b110101 ?
b110101 /
b110101 ;
0"
b11010100 #
b11010100 '
b11010100 L
b1 Q
#6950
1"
#7000
b110110 2
b110110 G
b110110 1
b110110 C
b110110 0
b110110 ?
b110110 /
b110110 ;
0"
b11011000 #
b11011000 '
b11011000 L
b10 Q
#7050
1"
#7100
b110111 2
b110111 G
b110111 1
b110111 C
b110111 0
b110111 ?
b110111 /
b110111 ;
0"
b11011100 #
b11011100 '
b11011100 L
b11 Q
#7150
b1101000101011001111000xxxxxxxx !
b1101000101011001111000xxxxxxxx .
b110100 *
b110100 J
b1010110 +
b1010110 F
b1111000 ,
b1111000 B
1"
#7200
b111000 2
b111000 G
b111000 1
b111000 C
b111000 0
b111000 ?
b111000 /
b111000 ;
0"
b11100000 #
b11100000 '
b11100000 L
b1110 P
b0 Q
#7250
bx00010010 !
bx00010010 .
b10010 -
b10010 >
bx ,
bx B
bx +
bx F
bx *
bx J
1"
#7300
b111001 2
b111001 G
b111001 1
b111001 C
b111001 0
b111001 ?
b111001 /
b111001 ;
0"
b11100100 #
b11100100 '
b11100100 L
b1 Q
#7350
bx !
bx .
bx -
bx >
1"
#7400
b111010 2
b111010 G
b111010 1
b111010 C
b111010 0
b111010 ?
b111010 /
b111010 ;
0"
b11101000 #
b11101000 '
b11101000 L
b10 Q
#7450
1"
#7500
b111011 2
b111011 G
b111011 1
b111011 C
b111011 0
b111011 ?
b111011 /
b111011 ;
0"
b11101100 #
b11101100 '
b11101100 L
b11 Q
#7550
b101011001111000xxxxxxxxxxxxxxxx !
b101011001111000xxxxxxxxxxxxxxxx .
b1010110 *
b1010110 J
b1111000 +
b1111000 F
1"
#7600
b111100 2
b111100 G
b111100 1
b111100 C
b111100 0
b111100 ?
b111100 /
b111100 ;
0"
b11110000 #
b11110000 '
b11110000 L
b1111 P
b0 Q
#7650
bx0001001000110100 !
bx0001001000110100 .
b110100 -
b110100 >
b10010 ,
b10010 B
bx +
bx F
bx *
bx J
1"
#7700
b111101 2
b111101 G
b111101 1
b111101 C
b111101 0
b111101 ?
b111101 /
b111101 ;
0"
b11110100 #
b11110100 '
b11110100 L
b1 Q
#7750
bx !
bx .
bx ,
bx B
bx -
bx >
1"
#7800
b111110 2
b111110 G
b111110 1
b111110 C
b111110 0
b111110 ?
b111110 /
b111110 ;
0"
b11111000 #
b11111000 '
b11111000 L
b10 Q
#7850
1"
#7900
b111111 2
b111111 G
b111111 1
b111111 C
b111111 0
b111111 ?
b111111 /
b111111 ;
0"
b11111100 #
b11111100 '
b11111100 L
b11 Q
#7950
b1111000xxxxxxxxxxxxxxxxxxxxxxxx !
b1111000xxxxxxxxxxxxxxxxxxxxxxxx .
b1111000 *
b1111000 J
1"
#8000
0"
b10000 P
b100 Q
